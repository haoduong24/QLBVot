@model QLBVot.Models.TAIKHOAN

@{
    ViewBag.Title = "Đăng ký";
}
<style>
    /* General container for the registration form */
.registration-container {
    max-width: 450px;
    margin: 50px auto;
    padding: 30px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

/* Title Styling */
h2 {
    font-size: 2em;
    margin-bottom: 30px;
    text-align: center;
    color: #333;
}

/* Form Group Styling */
.form-group {
    margin-bottom: 20px;
}

.form-group label {
    font-weight: bold;
    color: #333;
}

.form-group input {
    width: 100%;
    padding: 12px;
    font-size: 1em;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
    transition: all 0.3s ease;
}

.form-group input:focus {
    border-color: #007bff;
    outline: none;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

.form-group .text-danger {
    font-size: 0.9em;
    margin-top: 5px;
}

/* Button Styling */
.btn-primary {
    width: 100%;
    padding: 12px;
    font-size: 1.1em;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.btn-primary:hover {
    background-color: #0056b3;
}

/* Footer link styling */
.text-center.mt-3 a {
    color: #007bff;
    text-decoration: none;
    font-weight: bold;
}

.text-center.mt-3 a:hover {
    text-decoration: underline;
}

/* Success and Error Message Styling */
.alert {
    padding: 10px;
    margin-bottom: 20px;
    border-radius: 4px;
}

.alert-success {
    background-color: #d4edda;
    color: #155724;
}

.alert-danger {
    background-color: #f8d7da;
    color: #721c24;
}
</style>
<div class="registration-container">
    <h2>Đăng ký</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @using (Html.BeginForm("Register", "Dangnhap", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Username)
            @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password)
            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email)
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="btn btn-primary">Đăng ký</button>
    }

    <p class="text-center mt-3">
        <a href="@Url.Action("Login", "Dangnhap")">Đã có tài khoản? Đăng nhập ngay!</a>
    </p>

    @if (!String.IsNullOrEmpty(ViewData["ErrorMessage"] as string))
    {
        <div class="alert alert-danger">
            @ViewData["ErrorMessage"]
        </div>
    }
</div>
